class Person {
    constructor(name, age) {
        this.name = name;
        this.age = age;
    }
    greet() {
        console.log(`${this.name} - ${this.age}`);
    }
}
const args = ['Алиса', 22];
const alice = Reflect.construct(Person, args);
alice.greet();

/*
Reflect.construct используется для создания нового экземпляра объекта с заданным конструктором и аргументами. Он предоставляет альтернативный способ вызова конструктора объекта по сравнению с использованием оператора new или функции Object.create. Поддержка параметра newTarget позволяет контролировать контекст создания объекта, что полезно при использовании наследования и классов. 

В данном примере определяется класс Person с конструктором и методом greet. Reflect.construct(Person, args) вызывает конструктор Person с аргументами из массива args. В результате создается новый объект alice, который имеет свойства и методы, определенные в классе Person. Вызов alice.greet() выводит приветствие в консоль с заданными аргументами.
*/